- name: 'Copy ElasticSearch deployment files'
  copy:
    src: '../../../vendor/kubernetes-elasticsearch-cluster/{{ item }}'
    dest: '{{ es_addon_dir }}/'
    owner: root
    group: root
    mode: 0644
    directory_mode: 0755
  with_items:
    - es-discovery-svc.yaml
    - es-svc.yaml
    - es-master.yaml
    - es-master-pdb.yaml
    - es-ingest.yaml
    - es-ingest-svc.yaml
    - stateful/es-data-svc.yaml
    - stateful/es-data-stateful.yaml
    - es-data-pdb.yaml
    - es-curator-config.yaml
    - es-curator_v1beta1.yaml
  register: es_manifests
  run_once: true
  delegate_to: "{{ groups['kube-master'][0] }}"

- name: 'Delete old es-client deployment'
  kube:
    kubectl: '{{ bin_dir }}/kubectl'
    name: 'es-client'
    namespace: '{{ es_namespace }}'
    resource: 'deploy'
    state: 'absent'
  run_once: true
  delegate_to: "{{ groups['kube-master'][0] }}"

- name: 'Delete old elasticsearch service'
  kube:
    kubectl: '{{ bin_dir }}/kubectl'
    name: 'elasticsearch'
    namespace: '{{ es_namespace }}'
    resource: 'svc'
    state: 'absent'
  run_once: true
  delegate_to: "{{ groups['kube-master'][0] }}"

- name: 'Deploy ElasticSearch'
  kube:
    kubectl: '{{ bin_dir }}/kubectl'
    filename: '{{ es_addon_dir }}/{{ item | basename }}'
    namespace: '{{ es_namespace }}'
    state: 'latest'
  with_items: >-
    {{ es_manifests.results|default([])|map(attribute="item")|list }}
  run_once: true
  delegate_to: "{{ groups['kube-master'][0] }}"

# Fluentd
- name: 'create tempfile for Fluentd values'
  tempfile:
    state: file
    suffix: yml
  register: fluentd_values_file

- debug:
  var: fluentd_values_file.path
  when: debug|bool

- name: 'copy Fluentd values into temporary file'
  copy:
    src: fluentd-elasticsearch-values.yml
    dest: '{{ fluentd_values_file.path }}'

- name: 'install Fluentd ElasticSearch Chart'
  command: >-
    {{ bin_dir }}/helm upgrade
    --install
    --repo {{ fluentd_repo }}
    --version {{ fluentd_version }}
    --namespace {{ fluentd_namespace }}
    -f {{ fluentd_values_file.path }}
    {{ fluentd_release_name }}
    {{ fluentd_chart }}
  run_once: true
  delegate_to: "{{ groups['kube-master'][0] }}"

- name: 'remove temporary Fluentd values file'
  file:
    dest: '{{ fluentd_values_file.path }}'
    state: absent
  when: remove_metal_k8s_temporary_file|bool

# Kibana
- name: 'create tempfile for Kibana values'
  tempfile:
    state: file
    suffix: yml
  register: kibana_values_file

- debug:
  var: kibana_values_file.path
  when: debug|bool

- name: 'copy Kibana values into temporary file'
  copy:
    src: kibana-values.yml
    dest: '{{ kibana_values_file.path }}'

- name: 'install Kibana Chart'
  command: >-
    {{ bin_dir }}/helm upgrade
    --install
    --repo {{ kibana_repo }}
    --version {{ kibana_version }}
    --namespace {{ kibana_namespace }}
    -f {{ kibana_values_file.path }}
    {{ kibana_release_name }}
    {{ kibana_chart }}
  run_once: true
  delegate_to: "{{ groups['kube-master'][0] }}"

- name: 'remove temporary Kibana values file'
  file:
    dest: '{{ kibana_values_file.path }}'
    state: absent
  when: remove_metal_k8s_temporary_file|bool


# elasticsearch-exporter
- name: 'create tempfile for ElasticSearch Exporter values'
  tempfile:
    state: file
    suffix: yml
  register: es_exporter_values_file

- debug:
  var: es_exporter_values_file.path
  when: debug|bool

- name: 'copy ElasticSearch Exporter values into temporary file'
  copy:
    src: elasticsearch-exporter-values.yml
    dest: '{{ es_exporter_values_file.path }}'

- name: 'install ElasticSearch Exporter Chart'
  command: >-
    {{ bin_dir }}/helm upgrade
    --install
    --repo {{ elasticsearch_exporter_repo }}
    --version {{ elasticsearch_exporter_version }}
    --namespace {{ elasticsearch_exporter_namespace }}
    -f {{ es_exporter_values_file.path }}
    {{ elasticsearch_exporter_release_name }}
    {{ elasticsearch_exporter_chart }}
  run_once: true
  delegate_to: "{{ groups['kube-master'][0] }}"

- name: 'remove temporary ElasticSearch Exporter values file'
  file:
    dest: '{{ es_exporter_values_file.path }}'
    state: absent
  when: remove_metal_k8s_temporary_file|bool

- name: 'Copy ElasticSearch Exporter ServiceMonitor file'
  copy:
    src: 'es-exporter-servicemonitor.yml'
    dest: '{{ es_addon_dir }}/'
    owner: root
    group: root
    mode: 0644
    directory_mode: 0755
  run_once: true
  delegate_to: "{{ groups['kube-master'][0] }}"

- name: 'Deploy ElasticSearch Exporter ServiceMonitor'
  kube:
    kubectl: '{{ bin_dir }}/kubectl'
    filename: '{{ es_addon_dir }}/es-exporter-servicemonitor.yml'
    namespace: '{{ elasticsearch_exporter_namespace }}'
    state: 'latest'
  run_once: true
  delegate_to: "{{ groups['kube-master'][0] }}"

# Cerebro
- name: 'install Cerebro Chart'
  command: >-
    {{ bin_dir }}/helm upgrade
    --install
    --repo {{ cerebro_repo }}
    --version {{ cerebro_version }}
    --namespace {{ cerebro_namespace }}
    {{ cerebro_release_name }}
    {{ cerebro_chart }}
  run_once: true
  delegate_to: "{{ groups['kube-master'][0] }}"
